
variables:
  fatsDir: '$(system.defaultWorkingDirectory)/../fats'
  fatsRefspec: a224572f2f9685de7d7312f4d6c7e2892699fdd5 # projectriff/fats master as of 2019-05-01

jobs:
- job: build
  pool:
    vmImage: 'Ubuntu-16.04'

  steps:
  - template: ci/fetch-fats-step.yml
  - template: ci/install-duffle-step.yml

  - script: duffle init && duffle build .
    displayName: 'build bundle'

  - script: |
      $(fatsDir)/install.sh kubectl
      $(fatsDir)/install.sh minikube
      $(fatsDir)/install.sh riff
    displayName: 'install tools'

  - script: sudo apt-get update && sudo apt-get remove moby-engine moby-cli && sudo apt-get install docker.io=18.06.1-0ubuntu1.2~16.04.1
    displayName: 'Downgrade Docker'

  - script: |
      minikube config set embed-certs true # this ensures that ~/.minikube is not needed in invocation image
      source $(fatsDir)/start.sh
    displayName: 'install and start minikube'
    env:
      CLUSTER: minikube
      REGISTRY: minikube

  - script: |
      duffle credentials add ci/myk8s.yaml
      duffle install myriff riff --credentials myk8s
    displayName: 'duffle install'

  - template: ci/install-gcloud.yml

  - bash: ./ci/publish.sh stage
    condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
    env:
      GCLOUD_CLIENT_SECRET: '$(GcloudClientSecret)'
      BUILD_NUMBER: '$(Build.BuildNumber)'
    displayName: 'Publish riff cnab bundle'

  - template: ci/publish-docker-image-steps.yml

- job: test
  dependsOn: build
  strategy:
    matrix:
      minikube:
        imageName: ubuntu-16.04
        qualifier: minikube
        cluster: minikube
        registry: dockerhub
      # gke:
      #   imageName: ubuntu-16.04
      #   qualifier: gke
      #   cluster: gke
      #   registry: gcr
      # windows:
      #   imageName: windows-2019
      #   qualifier: windows
      #   cluster: gke
      #   registry: gcr
  pool:
    vmImage: $(imageName)
  variables:
    CLUSTER:  '$(cluster)'
    REGISTRY: '$(registry)'
    CLUSTER_NAME: 'riff-$(Build.BuildId)-$(qualifier)'
    NAMESPACE: '$(CLUSTER_NAME)'
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))

  steps:
  - template: ci/fetch-fats-step.yml
  - template: ci/install-duffle-step.yml

  - script: |
      $(fatsDir)/install.sh kubectl
      $(fatsDir)/install.sh minikube
      $(fatsDir)/install.sh riff
    displayName: 'install tools'

  - script: |
      sudo apt-get update && sudo apt-get remove moby-engine moby-cli && sudo apt-get install docker.io=18.06.1-0ubuntu1.2~16.04.1
      minikube config set embed-certs true
    condition: and(succeeded(), eq(variables['CLUSTER'], 'minikube'))
    displayName: 'setup minikube'

  - script: source $(fatsDir)/start.sh
    displayName: 'setup cluster'

  - script: |
      version="`cat VERSION`-$(Build.BuildNumber)"
      file=riff-bundle-${version}.json
      curl -O https://storage.googleapis.com/projectriff/riff-cnab/builds/${file}
      duffle credentials add ci/myk8s.yaml
      duffle install myriff ${file} --bundle-is-file --credentials myk8s --insecure
    displayName: 'install riff from cnab bundle'

  - bash: ./ci/run-tests.sh
    displayName: 'run fats'
    env:
      FATS_DIR: $(fatsDir)

- job: publish
  dependsOn: test
  pool:
    vmImage: 'Ubuntu-16.04'

  steps:
  - template: ci/install-gcloud.yml

  - bash: ./ci/publish.sh snapshot
    condition: startsWith(variables['Build.SourceBranch'], 'refs/heads/master')
    env:
      GCLOUD_CLIENT_SECRET: '$(GcloudClientSecret)'
      BUILD_NUMBER: '$(Build.BuildNumber)'
    displayName: 'Publish riff cnab bundle'

  - bash: ./ci/publish.sh release
    condition: startsWith(variables['Build.SourceBranch'], 'refs/heads/v')
    env:
      GCLOUD_CLIENT_SECRET: '$(GcloudClientSecret)'
    displayName: 'Publish riff cnab bundle'
