
variables:
  fatsDir: '$(system.defaultWorkingDirectory)/../fats'
  fatsRefspec: 2234005739491f39fabaa75098b19c6d521af324 # projectriff/fats master as of 2019-04-09

pool:
  vmImage: 'Ubuntu-16.04'

steps:
- template: ci/fetch-fats-step.yml
- template: ci/install-duffle-step.yml

- script: duffle init && duffle build .
  displayName: 'build bundle'

- script: |
    $(fatsDir)/install.sh kubectl
    $(fatsDir)/install.sh minikube
    $(fatsDir)/install.sh riff
  displayName: 'install tools'

- script: sudo apt-get update && sudo apt-get remove moby-engine moby-cli && sudo apt-get install docker.io=18.06.1-0ubuntu1.2~16.04.1
  displayName: 'Downgrade Docker'

- script: |
    minikube config set embed-certs true # this ensures that ~/.minikube is not needed in invocation image
    source $(fatsDir)/start.sh
  displayName: 'install and start minikube'
  env:
    CLUSTER: minikube
    REGISTRY: minikube

- script: |
    duffle credentials add ci/myk8s.yaml
    duffle install myriff riff --credentials myk8s
  displayName: 'duffle install'

- script: ./ci/run-tests.sh
  displayName: 'run fats'
  env:
    CLUSTER: minikube
    REGISTRY: minikube
    NAMESPACE: 'riff-$(Build.BuildId)-$(Agent.JobName)'
    CLUSTER_NAME: 'riff-$(Build.BuildId)-$(Agent.JobName)'

- template: ci/publish-docker-image-steps.yml

- template: ci/install-gcloud.yml

- bash: ./ci/publish.sh snapshot
  condition: startsWith(variables['Build.SourceBranch'], 'refs/heads/master')
  env:
    GCLOUD_CLIENT_SECRET: '$(GcloudClientSecret)'
    BUILD_NUMBER: '$(Build.BuildNumber)'
  displayName: 'Publish riff cnab bundle'

- bash: ./ci/publish.sh
  condition: startsWith(variables['Build.SourceBranch'], 'refs/heads/v')
  env:
    GCLOUD_CLIENT_SECRET: '$(GcloudClientSecret)'
  displayName: 'Publish riff cnab bundle'
